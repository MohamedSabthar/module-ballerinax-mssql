import org.apache.tools.ant.taskdefs.condition.Os

/*
 * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

apply plugin: 'java'

description = 'Ballerina - MSSQL Examples'

def ballerinaDist = "${project.rootDir}/target/ballerina-runtime"
def examples = ["query-operation", "execute-operation", "complex-queries-operation", "batch-operation", "call-stored-procedures"]

clean {
    examples.forEach { example ->
        delete "${projectDir}/${example}/target"
        delete "${projectDir}/${example}/Dependencies.toml"
    }
}

task updateTomlFiles {
    doLast {
        examples.each { example ->
            def ballerinaTomlFilePlaceHolder = new File("${project.rootDir}/build-config/resources/ExamplesBallerina.toml")
            def ballerinaTomlFile = new File("${project.projectDir}/${example}/Ballerina.toml")
            def newConfig = ballerinaTomlFilePlaceHolder.text.replace('@example.name@', example.replace("-", "_"))
            ballerinaTomlFile.text = newConfig
        }
    }
}

def graalvmFlag = ""

task testExamples {
    if (project.hasProperty('balGraalVMTest')) {
        graalvmFlag = '--graalvm'
    }

    doLast {
        examples.each { example ->
            try {
                exec {
                    workingDir "${project.projectDir}/${example}"
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        commandLine 'cmd', '/c', "${ballerinaDist}/bin/bal.bat test --offline ${graalvmFlag} && exit %%ERRORLEVEL%%"
                    } else {
                        commandLine 'sh', '-c', "${ballerinaDist}/bin/bal test --offline ${graalvmFlag}"
                    }
                }
            } catch (Exception e) {
                println("Example '${example}' Build failed: " + e.message)
                throw e
            }
        }
    }
}

task buildExamples {
    gradle.taskGraph.whenReady { graph ->
        if (graph.hasTask(":java.jdbc-examples:test")) {
            buildExamples.enabled = false
        }
    }
    doLast {
        examples.each { example ->
            try {
                exec {
                    workingDir "${project.projectDir}/${example}"
                    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
                        commandLine 'cmd', '/c', "${ballerinaDist}/bin/bal.bat pack --offline && exit %%ERRORLEVEL%%"
                    } else {
                        commandLine 'sh', '-c', "${ballerinaDist}/bin/bal pack --offline"
                    }
                }
            } catch (Exception e) {
                println("Example '${example}' Build failed: " + e.message)
                throw e
            }
        }
    }
}

def stripBallerinaExtensionVersion(String extVersion) {
    if (extVersion.matches(project.ext.timestampedVersionRegex)) {
        def splitVersion = extVersion.split('-')
        if (splitVersion.length > 3) {
            def strippedValues = splitVersion[0..-4]
            return strippedValues.join('-')
        } else {
            return extVersion
        }
    } else {
        return extVersion.replace("${project.ext.snapshotVersion}", '')
    }
}

def testContainerName = "ballerina-mssql-testContainer"

task stopExampleDockerContainer() {
    doLast {
        if (!Os.isFamily(Os.FAMILY_WINDOWS)) {
            try {
                def stdOut = new ByteArrayOutputStream()
                exec {
                    commandLine 'sh', '-c', "docker stop ${testContainerName}"
                    standardOutput = stdOut
                }
            } catch (all) {
                println("Process can safely ignore stopTestDockerContainer task")
            }
        }
    }
}

buildExamples.dependsOn ":mssql-ballerina:build", updateTomlFiles
testExamples.dependsOn ":mssql-ballerina:build", updateTomlFiles
test.dependsOn testExamples
build.dependsOn buildExamples
build.finalizedBy stopExampleDockerContainer
